{"version":3,"sources":["pages/India/India.module.css","pages/FAQ/Faq.module.css","pages/Precautions/Precautions.module.css","components/Cards/Cards.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","components/DonutChart/DonutChart.module.css","components/DatePicker/DatePicker.module.css","pages/Home/Home.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/DatePicker/DatePicker.jsx","components/MyTable/MyTable.jsx","pages/India/India.jsx","pages/FAQ/Faq.jsx","pages/Precautions/Precautions.jsx","Routes/Routes.jsx","components/Sidebar/Sidebar.jsx","pages/Home/Home.js","App.js","serviceWorker.js","index.js","components/MyTable/MyTable.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","cx","gridItem","Card","card","CardActionArea","CardContent","cardContent","Typography","color","gutterBottom","variant","paddingX","start","end","value","duration","separator","component","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","fetchDateData","d","getDate","m","getMonth","y","getFullYear","modifiedDate","merge","defaults","scale","gridLines","drawOnChartArea","Charts","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","scales","yAxes","ticks","callback","index","xAxes","autoSkip","autoSkipPadding","maxRotation","minRotation","borderColor","fill","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","BootstrapInput","withStyles","theme","root","marginTop","input","borderRadius","position","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","boxShadow","InputBase","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","InputLabel","id","Select","labelId","defaultValue","onChange","e","target","displayEmpty","renderValue","selected","length","MenuItem","i","key","DatePicker","handleDateChange","someDaysAgo","setDate","datePickerContainer","align","utils","DateFnsUtils","margin","format","minDate","maxDate","KeyboardButtonProps","MyTable","dateData","TableContainer","Paper","tableContainer","Table","table","aria-label","TableHead","TableRow","TableCell","TableBody","row","countryRegion","provinceState","useStyles","makeStyles","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","secondary","India","content","faqLibrary","question","Faq","classes","React","expanded","setExpanded","faq","ExpansionPanel","panel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Precautions","Routes","path","sidebarName","navbarName","icon","HomeIcon","homePage","RoomIcon","IndiaPage","AddCircleIcon","PrecautionsPage","HelpIcon","FAQPage","Sidebar","props","activeRoute","bind","routeName","this","location","pathname","indexOf","Drawer","drawer","anchor","open","drawerPaper","drawerHeader","IconButton","onClick","handleDrawerClose","Divider","MenuList","routes","prop","to","style","textDecoration","ListItemIcon","ListItemText","primary","Component","withRouter","appBar","easing","sharp","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","alignItems","mixins","toolbar","justifyContent","flexGrow","contentShift","Home","state","setState","fetchedData","CountryPicker","App","render","handleDrawerOpen","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","exact","home","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ccceb7f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"India_container__22z6t\",\"content\":\"India_content__2R1i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Faq_container__Hr_cc\",\"content\":\"Faq_content__3HuYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Precautions_container__3mzt_\",\"content\":\"Precautions_content__2NkX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3qmyy\",\"gridItem\":\"Cards_gridItem__2icu1\",\"card\":\"Cards_card__3JiJq\",\"cardContent\":\"Cards_cardContent__1wzFT\",\"confirmed\":\"Cards_confirmed__1WJPy\",\"recovered\":\"Cards_recovered__1KXLT\",\"deaths\":\"Cards_deaths__nNxDt\",\"paddingX\":\"Cards_paddingX__2hIfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1tDim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1nbxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DonutChart_container__GXjeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePickerContainer\":\"DatePicker_datePickerContainer__Y67KC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3Mr0G\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, CardActionArea } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={10} justify=\"center\">\r\n                <Grid item xs={12} md={4} className={cx(styles.gridItem)}>\r\n                    <Card className={cx(styles.card)}>\r\n                        <CardActionArea>\r\n                            <CardContent className={cx(styles.cardContent)}>\r\n                                <Typography color=\"textSecondary\" gutterBottom className={cx(styles.confirmed)}>\r\n                                    Confirmed\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" className={cx(styles.paddingX)}>\r\n                                    <CountUp start={0} end={confirmed.value} duration={1} separator=\",\"/>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cx(styles.paddingX)}>\r\n                                Number of active cases upto {new Date(lastUpdate).toDateString()}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={4} className={cx(styles.gridItem)}>\r\n                    <Card className={cx(styles.card)}>\r\n                        <CardActionArea>\r\n                            <CardContent className={cx(styles.cardContent)}>\r\n                                <Typography color=\"textSecondary\" gutterBottom className={cx(styles.recovered)}>\r\n                                    Recovered\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" className={cx(styles.paddingX)}>\r\n                                    <CountUp start={0} end={recovered.value} duration={1} separator=\",\"/>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cx(styles.paddingX)}>\r\n                                Number of recoveries upto {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={4} className={cx(styles.gridItem)}>\r\n                    <Card className={cx(styles.card)}>\r\n                        <CardActionArea>\r\n                            <CardContent className={cx(styles.cardContent)}>\r\n                                <Typography color=\"textSecondary\" gutterBottom className={cx(styles.deaths)}>\r\n                                    Deaths\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" className={cx(styles.paddingX)}>\r\n                                    <CountUp start={0} end={deaths.value} duration={1} separator=\",\"/>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={cx(styles.paddingX)}>\r\n                                    Number of deaths upto {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDateWise = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDateData = async (date) => {\r\n  let changeableUrl = url;\r\n\r\n  if (date) {\r\n    let d = date.getDate();\r\n    let m = date.getMonth() + 1;\r\n    let y = date.getFullYear();\r\n    let modifiedDate = '' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d) + '-' + y;\r\n\r\n    changeableUrl = `${url}/daily/${modifiedDate}`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(changeableUrl);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar, defaults } from 'react-chartjs-2';\r\nimport { Card } from '@material-ui/core';\r\nimport { merge } from 'lodash';\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Charts.module.css';\r\n\r\nmerge(defaults, {\r\n  scale: {\r\n    gridLines: {\r\n      drawOnChartArea: false,\r\n     },\r\n  },\r\n});\r\n\r\nconst Charts = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['#3f51b5cc', '#29a729cc', '#dd2138cc'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  var options = {\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                ticks: {\r\n                    callback: function(label, index, labels) {\r\n                      if(label >= 100000){\r\n                        return label/100000+'L'\r\n                      }  \r\n                      return label/1000+'k';\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        xAxes: [{\r\n          ticks: {\r\n              autoSkip: true,\r\n              autoSkipPadding: 20,\r\n              maxRotation: 90,\r\n              minRotation: 90\r\n          }\r\n      }]\r\n    }\r\n}\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line options={options}\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3f51b5cc',\r\n            backgroundColor: '#3f51b5cc',\r\n            fill: false,\r\n            pointBorderColor: '#3f51b5cc',\r\n            pointBackgroundColor: '#3f51b5cc',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: '#3f51b5cc',\r\n            pointHoverBorderColor: '#3f51b5cc',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#dd2138cc',\r\n            backgroundColor: '#dd2138cc',\r\n            fill: false,\r\n            pointBorderColor: '#dd2138cc',\r\n            pointBackgroundColor: '#dd2138cc',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: '#dd2138cc',\r\n            pointHoverBorderColor: '#dd2138cc',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n          }\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n\r\n  return (\r\n    <Card className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, InputLabel, MenuItem, Select, InputBase } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <InputLabel id=\"countries-select-label\"> Select Country</InputLabel>\r\n      <Select\r\n      labelId=\"countries-select-label\"\r\n      defaultValue=\"\"\r\n      onChange={(e) => handleCountryChange(e.target.value)} input={<BootstrapInput/>}\r\n      displayEmpty\r\n      renderValue={(selected) => {\r\n        if (selected.length === 0) {\r\n          return <em>All Countries</em>;\r\n        }\r\n        return selected;\r\n      }}\r\n      >\r\n        <MenuItem value=\"\">All Countries</MenuItem >\r\n        {countries.map((country, i) => <MenuItem key={i} value={country}>{country}</MenuItem>)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import 'date-fns';\r\nimport React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport styles from './DatePicker.module.css';\r\n\r\nconst DatePicker = ({ date, handleDateChange }) => {\r\n  // const [selectedDate, setSelectedDate] = React.useState(new Date('2020-02-14T21:11:54'));\r\n  let someDaysAgo = new Date()\r\n  someDaysAgo = someDaysAgo.setDate(someDaysAgo.getDate() - 2)\r\n  return (\r\n    <div className={styles.datePickerContainer}>\r\n      <Typography align='center'>Select Date For Viewing Historical Data</Typography>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container justify=\"space-around\">\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"\"\r\n            format=\"MM-dd-yyyy\"\r\n            value={date}\r\n            onChange={handleDateChange}\r\n            minDate={new Date('2020-01-22T21:11:54')}\r\n            maxDate={someDaysAgo}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatePicker;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styles from './MyTable.module.css';\r\n\r\nconst MyTable = ({ date, dateData }) => {\r\n\r\n  if (dateData.length === 0) {\r\n    return (\r\n      <TableContainer component={Paper} className={styles.tableContainer}>\r\n        <Table className={styles.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Country</TableCell>\r\n              <TableCell align=\"center\">Province/State</TableCell>\r\n              <TableCell align=\"center\">Confirmed</TableCell>\r\n              <TableCell align=\"center\">Recovered</TableCell>\r\n              <TableCell align=\"center\">Deaths</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              <TableRow>\r\n                <TableCell align=\"center\">No Data</TableCell>\r\n                <TableCell align=\"center\">No Data</TableCell>\r\n                <TableCell align=\"center\">No Data</TableCell>\r\n                <TableCell align=\"center\">No Data</TableCell>\r\n                <TableCell align=\"center\">No Data</TableCell>\r\n              </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={styles.tableContainer}>\r\n      <Table className={styles.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Country</TableCell>\r\n            <TableCell align=\"center\">Province/State</TableCell>\r\n            <TableCell align=\"center\">Confirmed</TableCell>\r\n            <TableCell align=\"center\">Recovered</TableCell>\r\n            <TableCell align=\"center\">Deaths</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dateData.map((row, i) => (\r\n            <TableRow key={i}>\r\n              <TableCell align=\"center\">{row.countryRegion}</TableCell>\r\n              <TableCell align=\"center\">{row.provinceState}</TableCell>\r\n              <TableCell align=\"center\">{row.confirmed}</TableCell>\r\n              <TableCell align=\"center\">{row.recovered}</TableCell>\r\n              <TableCell align=\"center\">{row.deaths}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default MyTable;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './India.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction India() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.content}>\r\n                <Typography>Coming Soon...</Typography>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default India;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport styles from './Faq.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\nconst faqLibrary = [\r\n\r\n    { id: 1, question: \"What is a coronavirus ?\", content: \"Coronaviruses are a large family of viruses which may cause illness in animals or humans. In humans, several coronaviruses are known to cause respiratory infections ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome(MERS) and Severe Acute Respiratory Syndrome(SARS).The most recently discovered coronavirus causes coronavirus disease COVID - 19.\" },\r\n\r\n    { id: 2, question: \"What is COVID - 19 ?\", content: \"COVID - 19 is the infectious disease caused by the most recently discovered coronavirus.This new virus and disease were unknown before the outbreak began in Wuhan, China, in December 2019. COVID - 19 is now a pandemic affecting many countries globally.\" },\r\n\r\n    { id: 3, question: \"How does COVID - 19 spread ?\", content: \"People can catch COVID - 19 from others who have the virus. The disease spreads primarily from person to person through small droplets from the nose or mouth, which are expelled when a person with COVID - 19 coughs, sneezes, or speaks.These droplets are relatively heavy, do not travel far and quickly sink to the ground. People can catch COVID - 19 if they breathe in these droplets from a person infected with the virus. This is why it is important to stay at least 1 metre (3 feet) away from others.These droplets can land on objects and surfaces around the person such as tables, doorknobs and handrails. People can become infected by touching these objects or surfaces, then touching their eyes, nose or mouth. This is why it is important to wash your hands regularly with soap and water or clean with alcohol - based hand rub.\" },\r\n\r\n];\r\n\r\nfunction Faq() {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.content}>\r\n                {faqLibrary.map((faq, i) => (\r\n                    <ExpansionPanel expanded={expanded === 'panel' + i} onChange={handleChange('panel' + i)}>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls={\"panel\"+i+\"bh-content\"}\r\n                            id={\"panel\"+i+\"bh-header\"}\r\n                        >\r\n                            <Typography className={classes.heading}>{faq.question}</Typography>\r\n                        </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Typography>{faq.content}</Typography>\r\n                    </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                ))}\r\n        </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Faq;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Precautions.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction Precautions() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.content}>\r\n                <Typography>Protect yourself and others around you by knowing the facts and taking appropriate precautions. Follow advice provided by your local public health agency.</Typography>\r\n                <ul>\r\n                    <li>Clean your hands often. Use soap and water, or an alcohol-based hand rub.</li>\r\n                    <li>Maintain a safe distance from anyone who is coughing or sneezing.</li>\r\n                    <li>Don’t touch your eyes, nose or mouth.</li>\r\n                    <li>Cover your nose and mouth with your bent elbow or a tissue when you cough or sneeze.</li>\r\n                    <li>Stay home if you feel unwell.</li>\r\n                    <li>If you have a fever, a cough, and difficulty breathing, seek medical attention. Call in advance.</li>\r\n                    <li>Follow the directions of your local health authority.</li>\r\n                </ul>\r\n\r\n                <Typography>Avoiding unneeded visits to medical facilities allows healthcare systems to operate more effectively, therefore protecting you and others.</Typography>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Precautions;","import HomeIcon from '@material-ui/icons/Home';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport homePage from '../pages/Home/Home';\r\nimport IndiaPage from '../pages/India/India';\r\nimport FAQPage from '../pages/FAQ/Faq';\r\nimport PrecautionsPage from '../pages/Precautions/Precautions'\r\n\r\n\r\nconst Routes = [\r\n  {\r\n    path: '/covid19tracker',\r\n    sidebarName: 'Home',\r\n    navbarName: 'Home',\r\n    icon: HomeIcon,\r\n    component: homePage\r\n  },\r\n  {\r\n    path: '/covid19tracker/india',\r\n    sidebarName: 'India Page',\r\n    navbarName: 'India Page',\r\n    icon: RoomIcon,\r\n    component: IndiaPage\r\n  },\r\n  {\r\n    path: '/covid19tracker/precautions',\r\n    sidebarName: 'Precautions',\r\n    navbarName: 'Precautions',\r\n    icon: AddCircleIcon,\r\n    component: PrecautionsPage\r\n  },\r\n  {\r\n    path: '/covid19tracker/faq',\r\n    sidebarName: 'FAQ',\r\n    navbarName: 'FAQ',\r\n    icon: HelpIcon,\r\n    component: FAQPage\r\n  }\r\n];\r\n\r\nexport default Routes;","import React, { Component } from 'react';\r\nimport { ListItemIcon, ListItemText, MenuList, MenuItem, Drawer, IconButton, Divider } from '@material-ui/core';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport routes from '../../Routes/Routes';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n});\r\n\r\nclass Sidebar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.activeRoute = this.activeRoute.bind(this);\r\n  }\r\n\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? true : false;\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={this.props.open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.props.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <MenuList>\r\n            {routes.map((prop, key) => {\r\n              return (\r\n                <Link to={prop.path} style={{ textDecoration: 'none' }} key={key}>\r\n                  <MenuItem selected={this.activeRoute(prop.path)}>\r\n                    <ListItemIcon>\r\n                      <prop.icon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={prop.sidebarName} />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            })}\r\n          </MenuList>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Sidebar));","import React from 'react';\r\nimport { Cards, Charts, CountryPicker, DatePicker, MyTable} from '../../components';\r\nimport { fetchData, fetchDateData } from '../../api';\r\nimport styles from './Home.module.css';\r\n\r\nclass Home extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n    date: new Date('2020-02-14T21:11:54'),\r\n    dateData: [],\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  handleDateChange = async (date) => {\r\n    let dateData = await fetchDateData(date);\r\n\r\n    this.setState({ date, dateData: dateData });\r\n  };\r\n\r\n  render() {\r\n    const { data, country, date, dateData } = this.state; \r\n\r\n    return (\r\n          <div className={styles.container}>\r\n            <Cards data={data} />\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n            <Charts data={data} country={country} />\r\n            <DatePicker date={date} handleDateChange={this.handleDateChange}/>\r\n            <MyTable date={date} dateData={dateData}/>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { CssBaseline, AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport home from './pages/Home/Home';\nimport FAQPage from './pages/FAQ/Faq';\nimport PrecautionsPage from './pages/Precautions/Precautions';\nimport IndiaPage from './pages/India/India';\nimport { Sidebar } from './components';\n\nconst drawerWidth = 300;\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    background: '#ffffff',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    // padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass App extends React.Component {\n\n  state = {\n    open: false,\n    render: false\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: this.state.open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, this.state.open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Covid-19 Tracker\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Router>\n          <Sidebar open={this.state.open} handleDrawerClose={this.handleDrawerClose}/>\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: this.state.open,\n            })}\n          >\n            <div>\n              <Switch>\n                <Route exact path=\"/covid19tracker\" component={home} />\n                <Route exact path=\"/covid19tracker/india\" component={IndiaPage} />\n                <Route exact path=\"/covid19tracker/faq\" component={FAQPage} />\n                <Route exact path=\"/covid19tracker/precautions\" component={PrecautionsPage} />\n              </Switch>\n            </div>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"MyTable_table__3uPMz\",\"tableContainer\":\"MyTable_tableContainer__3V0H_\"};"],"sourceRoot":""}